/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package no.nav.samordning.pgi.schema;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** https://skatteetaten.github.io/datasamarbeid-api-dokumentasjon/reference_feed */
@org.apache.avro.specific.AvroGenerated
public class Hendelse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 124317483880193659L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Hendelse\",\"namespace\":\"no.nav.samordning.pgi.schema\",\"doc\":\"https://skatteetaten.github.io/datasamarbeid-api-dokumentasjon/reference_feed\",\"fields\":[{\"name\":\"sekvensnummer\",\"type\":\"long\"},{\"name\":\"identifikator\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"gjelderPeriode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"metaData\",\"type\":[{\"type\":\"record\",\"name\":\"HendelseMetadata\",\"doc\":\"Metadata for pgi\",\"fields\":[{\"name\":\"retries\",\"type\":\"long\"}]},\"null\"],\"default\":\"null\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long sekvensnummer;
  @Deprecated public java.lang.String identifikator;
  @Deprecated public java.lang.String gjelderPeriode;
  @Deprecated public no.nav.samordning.pgi.schema.HendelseMetadata metaData;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Hendelse() {}

  /**
   * All-args constructor.
   * @param sekvensnummer The new value for sekvensnummer
   * @param identifikator The new value for identifikator
   * @param gjelderPeriode The new value for gjelderPeriode
   * @param metaData The new value for metaData
   */
  public Hendelse(java.lang.Long sekvensnummer, java.lang.String identifikator, java.lang.String gjelderPeriode, no.nav.samordning.pgi.schema.HendelseMetadata metaData) {
    this.sekvensnummer = sekvensnummer;
    this.identifikator = identifikator;
    this.gjelderPeriode = gjelderPeriode;
    this.metaData = metaData;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return sekvensnummer;
    case 1: return identifikator;
    case 2: return gjelderPeriode;
    case 3: return metaData;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: sekvensnummer = (java.lang.Long)value$; break;
    case 1: identifikator = (java.lang.String)value$; break;
    case 2: gjelderPeriode = (java.lang.String)value$; break;
    case 3: metaData = (no.nav.samordning.pgi.schema.HendelseMetadata)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'sekvensnummer' field.
   * @return The value of the 'sekvensnummer' field.
   */
  public java.lang.Long getSekvensnummer() {
    return sekvensnummer;
  }

  /**
   * Sets the value of the 'sekvensnummer' field.
   * @param value the value to set.
   */
  public void setSekvensnummer(java.lang.Long value) {
    this.sekvensnummer = value;
  }

  /**
   * Gets the value of the 'identifikator' field.
   * @return The value of the 'identifikator' field.
   */
  public java.lang.String getIdentifikator() {
    return identifikator;
  }

  /**
   * Sets the value of the 'identifikator' field.
   * @param value the value to set.
   */
  public void setIdentifikator(java.lang.String value) {
    this.identifikator = value;
  }

  /**
   * Gets the value of the 'gjelderPeriode' field.
   * @return The value of the 'gjelderPeriode' field.
   */
  public java.lang.String getGjelderPeriode() {
    return gjelderPeriode;
  }

  /**
   * Sets the value of the 'gjelderPeriode' field.
   * @param value the value to set.
   */
  public void setGjelderPeriode(java.lang.String value) {
    this.gjelderPeriode = value;
  }

  /**
   * Gets the value of the 'metaData' field.
   * @return The value of the 'metaData' field.
   */
  public no.nav.samordning.pgi.schema.HendelseMetadata getMetaData() {
    return metaData;
  }

  /**
   * Sets the value of the 'metaData' field.
   * @param value the value to set.
   */
  public void setMetaData(no.nav.samordning.pgi.schema.HendelseMetadata value) {
    this.metaData = value;
  }

  /**
   * Creates a new Hendelse RecordBuilder.
   * @return A new Hendelse RecordBuilder
   */
  public static no.nav.samordning.pgi.schema.Hendelse.Builder newBuilder() {
    return new no.nav.samordning.pgi.schema.Hendelse.Builder();
  }

  /**
   * Creates a new Hendelse RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Hendelse RecordBuilder
   */
  public static no.nav.samordning.pgi.schema.Hendelse.Builder newBuilder(no.nav.samordning.pgi.schema.Hendelse.Builder other) {
    return new no.nav.samordning.pgi.schema.Hendelse.Builder(other);
  }

  /**
   * Creates a new Hendelse RecordBuilder by copying an existing Hendelse instance.
   * @param other The existing instance to copy.
   * @return A new Hendelse RecordBuilder
   */
  public static no.nav.samordning.pgi.schema.Hendelse.Builder newBuilder(no.nav.samordning.pgi.schema.Hendelse other) {
    return new no.nav.samordning.pgi.schema.Hendelse.Builder(other);
  }

  /**
   * RecordBuilder for Hendelse instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Hendelse>
    implements org.apache.avro.data.RecordBuilder<Hendelse> {

    private long sekvensnummer;
    private java.lang.String identifikator;
    private java.lang.String gjelderPeriode;
    private no.nav.samordning.pgi.schema.HendelseMetadata metaData;
    private no.nav.samordning.pgi.schema.HendelseMetadata.Builder metaDataBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(no.nav.samordning.pgi.schema.Hendelse.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.sekvensnummer)) {
        this.sekvensnummer = data().deepCopy(fields()[0].schema(), other.sekvensnummer);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.identifikator)) {
        this.identifikator = data().deepCopy(fields()[1].schema(), other.identifikator);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.gjelderPeriode)) {
        this.gjelderPeriode = data().deepCopy(fields()[2].schema(), other.gjelderPeriode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.metaData)) {
        this.metaData = data().deepCopy(fields()[3].schema(), other.metaData);
        fieldSetFlags()[3] = true;
      }
      if (other.hasMetaDataBuilder()) {
        this.metaDataBuilder = no.nav.samordning.pgi.schema.HendelseMetadata.newBuilder(other.getMetaDataBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Hendelse instance
     * @param other The existing instance to copy.
     */
    private Builder(no.nav.samordning.pgi.schema.Hendelse other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.sekvensnummer)) {
        this.sekvensnummer = data().deepCopy(fields()[0].schema(), other.sekvensnummer);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.identifikator)) {
        this.identifikator = data().deepCopy(fields()[1].schema(), other.identifikator);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.gjelderPeriode)) {
        this.gjelderPeriode = data().deepCopy(fields()[2].schema(), other.gjelderPeriode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.metaData)) {
        this.metaData = data().deepCopy(fields()[3].schema(), other.metaData);
        fieldSetFlags()[3] = true;
      }
      this.metaDataBuilder = null;
    }

    /**
      * Gets the value of the 'sekvensnummer' field.
      * @return The value.
      */
    public java.lang.Long getSekvensnummer() {
      return sekvensnummer;
    }

    /**
      * Sets the value of the 'sekvensnummer' field.
      * @param value The value of 'sekvensnummer'.
      * @return This builder.
      */
    public no.nav.samordning.pgi.schema.Hendelse.Builder setSekvensnummer(long value) {
      validate(fields()[0], value);
      this.sekvensnummer = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'sekvensnummer' field has been set.
      * @return True if the 'sekvensnummer' field has been set, false otherwise.
      */
    public boolean hasSekvensnummer() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'sekvensnummer' field.
      * @return This builder.
      */
    public no.nav.samordning.pgi.schema.Hendelse.Builder clearSekvensnummer() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'identifikator' field.
      * @return The value.
      */
    public java.lang.String getIdentifikator() {
      return identifikator;
    }

    /**
      * Sets the value of the 'identifikator' field.
      * @param value The value of 'identifikator'.
      * @return This builder.
      */
    public no.nav.samordning.pgi.schema.Hendelse.Builder setIdentifikator(java.lang.String value) {
      validate(fields()[1], value);
      this.identifikator = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'identifikator' field has been set.
      * @return True if the 'identifikator' field has been set, false otherwise.
      */
    public boolean hasIdentifikator() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'identifikator' field.
      * @return This builder.
      */
    public no.nav.samordning.pgi.schema.Hendelse.Builder clearIdentifikator() {
      identifikator = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'gjelderPeriode' field.
      * @return The value.
      */
    public java.lang.String getGjelderPeriode() {
      return gjelderPeriode;
    }

    /**
      * Sets the value of the 'gjelderPeriode' field.
      * @param value The value of 'gjelderPeriode'.
      * @return This builder.
      */
    public no.nav.samordning.pgi.schema.Hendelse.Builder setGjelderPeriode(java.lang.String value) {
      validate(fields()[2], value);
      this.gjelderPeriode = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'gjelderPeriode' field has been set.
      * @return True if the 'gjelderPeriode' field has been set, false otherwise.
      */
    public boolean hasGjelderPeriode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'gjelderPeriode' field.
      * @return This builder.
      */
    public no.nav.samordning.pgi.schema.Hendelse.Builder clearGjelderPeriode() {
      gjelderPeriode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'metaData' field.
      * @return The value.
      */
    public no.nav.samordning.pgi.schema.HendelseMetadata getMetaData() {
      return metaData;
    }

    /**
      * Sets the value of the 'metaData' field.
      * @param value The value of 'metaData'.
      * @return This builder.
      */
    public no.nav.samordning.pgi.schema.Hendelse.Builder setMetaData(no.nav.samordning.pgi.schema.HendelseMetadata value) {
      validate(fields()[3], value);
      this.metaDataBuilder = null;
      this.metaData = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'metaData' field has been set.
      * @return True if the 'metaData' field has been set, false otherwise.
      */
    public boolean hasMetaData() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'metaData' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public no.nav.samordning.pgi.schema.HendelseMetadata.Builder getMetaDataBuilder() {
      if (metaDataBuilder == null) {
        if (hasMetaData()) {
          setMetaDataBuilder(no.nav.samordning.pgi.schema.HendelseMetadata.newBuilder(metaData));
        } else {
          setMetaDataBuilder(no.nav.samordning.pgi.schema.HendelseMetadata.newBuilder());
        }
      }
      return metaDataBuilder;
    }

    /**
     * Sets the Builder instance for the 'metaData' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public no.nav.samordning.pgi.schema.Hendelse.Builder setMetaDataBuilder(no.nav.samordning.pgi.schema.HendelseMetadata.Builder value) {
      clearMetaData();
      metaDataBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'metaData' field has an active Builder instance
     * @return True if the 'metaData' field has an active Builder instance
     */
    public boolean hasMetaDataBuilder() {
      return metaDataBuilder != null;
    }

    /**
      * Clears the value of the 'metaData' field.
      * @return This builder.
      */
    public no.nav.samordning.pgi.schema.Hendelse.Builder clearMetaData() {
      metaData = null;
      metaDataBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Hendelse build() {
      try {
        Hendelse record = new Hendelse();
        record.sekvensnummer = fieldSetFlags()[0] ? this.sekvensnummer : (java.lang.Long) defaultValue(fields()[0]);
        record.identifikator = fieldSetFlags()[1] ? this.identifikator : (java.lang.String) defaultValue(fields()[1]);
        record.gjelderPeriode = fieldSetFlags()[2] ? this.gjelderPeriode : (java.lang.String) defaultValue(fields()[2]);
        if (metaDataBuilder != null) {
          record.metaData = this.metaDataBuilder.build();
        } else {
          record.metaData = fieldSetFlags()[3] ? this.metaData : (no.nav.samordning.pgi.schema.HendelseMetadata) defaultValue(fields()[3]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
